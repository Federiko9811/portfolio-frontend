[
    {
        "id": 1,
        "title": "Iris Recognition: Traditional vs. Deep Learning Approaches",
        "description": "Comparison of traditional biometric pipeline vs deep learning-based methods",
        "tags": [
            "Machine learning",
            "Deep learning",
            "Biometric system evaluation",
            "Python",
            "OpenCV"
        ],
        "start_date": "01/10/2024",
        "end_date": "01/01/2025",
        "content": "\nThis project explores the comparison between traditional and deep learning-based approaches for iris recognition. \n\nThe classical pipeline, implemented using the OpenIris library, relies on Gabor filters for feature extraction and Hamming distance for matching. \n\nIn contrast, the deep learning model leverages a ResNet-50 architecture, generating feature embeddings and evaluating similarity using cosine metrics. \n\nBoth methods were evaluated on the CASIA-Iris-Thousand dataset under identical conditions, highlighting the trade-offs between rule-based and data-driven techniques for biometric authentication.\n",
        "github": "https://github.com/lorenzosp01/iris-recognition-system",
        "pdf": "/data/files/iris-recognition/IrisRecognitionProject.pdf",
        "authors": [
            {
                "name": "Federico Raponi",
                "linkedin": "https://www.linkedin.com/in/federico-raponi-4501ab199/",
                "github": "https://github.com/Federiko9811"
            },
            {
                "name": "Alessio Pannozzo",
                "linkedin": "https://www.linkedin.com/in/alessio-pannozzo-7a9101176/",
                "github": ""
            },
            {
                "name": "Lorenzo Spataro",
                "linkedin": "https://www.linkedin.com/in/lorenzo-spataro-b0690117a/",
                "github": ""
            }
        ]
    },
    {
        "id": 2,
        "title": "Pneumonia detection from Chest X-ray images",
        "description": "Comparison of binary classification techniques using traditional methods and deep learning",
        "tags": [
            "Machine learning",
            "Deep learning",
            "ResNet50",
            "Classifiers",
            "Python",
            "OpenCV"
        ],
        "start_date": "01/10/2024",
        "end_date": "01/01/2025",
        "content": "This study explores the effectiveness of binary classification techniques for pneumonia detection from chest X-ray images, comparing traditional machine learning methods with deep learning approaches. A key focus is evaluating cross-dataset generalization, assessing whether models trained on one dataset can accurately classify pneumonia in unseen datasets, a crucial factor for real-world clinical applications.  \n  \nUsing three publicly available datasets—Chest X-Ray Images (Pneumonia), CheXpert, and the RSNA Pneumonia Detection Challenge—the research examines the impact of data variability on model performance. Traditional classifiers, including Logistic Regression, K-Nearest Neighbors, Decision Trees, and Support Vector Machines, are tested alongside deep learning models, such as CNNs and ResNet50. Training and testing on different datasets allow for a comprehensive evaluation of model robustness in handling diverse clinical data.  \n  \nThe findings indicate that deep learning models, particularly ResNet50, outperform traditional methods in both intra-dataset and cross-dataset evaluations. However, simpler models like KNN and Logistic Regression exhibit greater stability across datasets, suggesting that their feature extraction methods are less sensitive to domain shifts. Dataset characteristics, such as class imbalance, label inconsistencies, and image quality, play a significant role in determining performance. Fine-tuning classification thresholds using ROC analysis further enhances diagnostic accuracy.  \n  \nThis study underscores the importance of AI-driven diagnostic tools while highlighting the challenges of ensuring model generalization. Future research will focus on integrating multimodal data, addressing dataset biases, and improving model interpretability to enhance AI-assisted pneumonia detection in clinical practice.\n",
        "github": "",
        "pdf": "/data/files/pneumonia-detection/PneumoniaDetection.pdf",
        "authors": [
            {
                "name": "Federico Raponi",
                "linkedin": "https://www.linkedin.com/in/federico-raponi-4501ab199/",
                "github": "https://github.com/Federiko9811"
            },
            {
                "name": "Marco Realacci",
                "linkedin": "https://www.linkedin.com/in/marco-realacci-634433264/",
                "github": ""
            },
            {
                "name": "Lorenzo Spataro",
                "linkedin": "https://www.linkedin.com/in/lorenzo-spataro-b0690117a/",
                "github": ""
            },
            {
                "name": "Alessio Pannozzo",
                "linkedin": "https://www.linkedin.com/in/alessio-pannozzo-7a9101176/",
                "github": ""
            },
            {
                "name": "Gioele Maria Zoccoli",
                "linkedin": "https://www.linkedin.com/in/gioele-maria-zoccoli-146299302/",
                "github": ""
            }
        ]
    },
    {
        "id": 3,
        "title": "Progettazione e implementazione di un sistema di raccolta dati per l’allenamento di un modello di Machine Learning",
        "description": "This is the internship report for my Bachelor's degree thesis.",
        "tags": ["Databases", "Data Collection", "REST API", "Backend", "Sensor Data"],
        "start_date": "01/04/2024",
        "end_date": "30/10/2024",
        "content": "This report details the design and implementation of a system for storing data from various sensors on mobile devices. The goal is to collect as much information as possible to create a comprehensive dataset for training a Machine Learning model. The system was developed following REST principles to ensure efficient interaction between the software and the devices. To enhance system robustness, dedicated Unit Tests were implemented, improving the reliability and overall quality of the software.\n\n**Chapter 1** introduces the issue of traffic congestion and the challenges of finding parking in Italian cities, highlighting how these factors negatively impact urban life. The chapter presents _GeneroCity_, a mobile application that allows users to share real-time parking availability information through implicit interaction, leveraging sensors and technologies such as Bluetooth Low Energy (BLE) and Machine Learning.\n\n**Chapter 2** explores the project's architecture, dividing it into backend and frontend modules. It examines the data transfer protocols used, such as HTTP and HTTPS, and discusses the importance of REST APIs. Additionally, it describes the key technologies used in the _GeneroCity_ stack, including GoLang and MariaDB.\n\n**Chapter 3** focuses on software testing, emphasizing the significance of unit testing in ensuring code quality and maintainability. The chapter examines tools such as GO-SQLMock and the creation of a MockFS system to facilitate testing.\n\n**Chapter 4** delves into the implementation of a data collection and management mechanism. It covers database design and the creation of endpoints for interacting with the collected data. Furthermore, it discusses the optimization of these endpoints to improve performance during data transmission.\n\n**Chapter 5** outlines minor contributions to the project, with particular attention to the _GeneroCity BLE_ system and the collection of data related to Bluetooth devices in the user's vicinity.\n",
        "github": null,
        "pdf": "/data/files/tirocinio/RelazioneTirocinioL31_Raponi.pdf",
        "authors": [
            {
                "name": "Federico Raponi",
                "linkedin": "https://www.linkedin.com/in/federico-raponi-4501ab199/",
                "github": "https://github.com/Federiko9811"
            }
        ]
    }

]